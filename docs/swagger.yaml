basePath: /
definitions:
  app.loginReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  app.loginResp:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      token_type:
        type: string
    type: object
  app.registerReq:
    properties:
      name:
        description: лучше назвать то же самое что login
        type: string
      pass:
        type: string
    type: object
  app.registerResp:
    properties:
      ok:
        type: boolean
    type: object
  ds.BookRegionRequestBody:
    properties:
      arrivalDate:
        type: string
      regionName:
        type: string
      takeoffDate:
        type: string
    type: object
  ds.ChangeFlightStatusRequestBody:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  ds.DeleteFlightToRegionRequestBody:
    properties:
      flightID:
        type: integer
      regionID:
        type: integer
    type: object
  ds.Flight:
    properties:
      arrivalDate:
        type: string
      dateCreated:
        type: string
      dateFinished:
        type: string
      dateProcessed:
        type: string
      id:
        type: integer
      moderator:
        $ref: '#/definitions/ds.User'
      moderatorRefer:
        type: string
      status:
        type: string
      takeoffDate:
        type: string
      user:
        $ref: '#/definitions/ds.User'
      userRefer:
        type: string
    type: object
  ds.Region:
    properties:
      areaKm:
        type: number
      averageHeightM:
        type: number
      details:
        type: string
      district:
        type: string
      headEmail:
        type: string
      headName:
        type: string
      headPhone:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      population:
        type: integer
      status:
        type: string
    type: object
  ds.User:
    properties:
      name:
        type: string
      pass:
        type: string
      role:
        $ref: '#/definitions/role.Role'
      uuid:
        type: string
    type: object
  role.Role:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Undefined
    - User
    - Moderator
    - Admin
host: 127.0.0.1:8000
info:
  contact: {}
  title: Заявки контроля маршрутов БПЛА
  version: 0.0-0
paths:
  /book:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Создаёт новую заявку и добавляет в неё регион
      parameters:
      - description: Параметры запроса на бронирование
=======
      description: Создаёт новую заявку и связывает её с регионом
      parameters:
      - description: Параметры бронирования
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ds.BookRegionRequestBody'
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Забронировать регион
      tags:
      - Бронирование
  /flight:
    get:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Возвращает заяввку с указанными параметрами
=======
      description: Возвращает заявку с переданными параметрами
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      parameters:
      - description: Статус заявки
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Получить заявку
      tags:
      - Заявки
  /flight/delete/{flight_id}:
    put:
      consumes:
      - application/json
      description: Меняет статус заявки на "Удалён"
      parameters:
      - description: id заявки
        in: path
        name: flight_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Удалить заявку
      tags:
      - Заявки
  /flight/edit:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Находит заявку и обновляет её поля
=======
      description: Находит заявку и редактирует её поля
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      parameters:
      - description: Заявка
        in: body
        name: flight
        schema:
          $ref: '#/definitions/ds.Flight'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
<<<<<<< HEAD
      summary: Отредактировать заявку
=======
      summary: Редактировать заявку
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      tags:
      - Заявки
  /flight/status_change:
    put:
      consumes:
      - application/json
      description: Получает id заявки и новый статус и производит необходимые обновления
      parameters:
      - description: Тело запроса
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.ChangeFlightStatusRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Изменить статус заявки
      tags:
      - Заявки
  /flight_to_region/delete:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      parameters:
      - description: Тело запроса
=======
      description: Удаляет запись в таблице fligt_to_region
      parameters:
      - description: Параметры запроса
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.DeleteFlightToRegionRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Удаляет связь региона с заявкой
      tags:
      - Заявки
  /flights:
    get:
<<<<<<< HEAD
      description: Возвращает список заявок
      parameters:
      - description: Статус заявок
=======
      description: Возвращает список всех доступных заявок
      parameters:
      - description: Статус заявки
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Получить заявки
      tags:
      - Заявки
  /login:
    post:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Возвращает jwt токен
      parameters:
      - description: Тело запроса на вход
=======
      description: Проверяет данные для входа и в случае успеха возвращает токен для
        входа
      parameters:
      - description: Данные для входа
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.loginResp'
<<<<<<< HEAD
      summary: Войти в систему
=======
      summary: Вход в систему
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      tags:
      - Аутентификация
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Выйти из системы
      tags:
      - Аутентификация
  /region/{region}:
    get:
<<<<<<< HEAD
      description: Возвращает регион по имени
      parameters:
      - description: Имя региона
=======
      description: Возвращает данные региона с переданным названием
      parameters:
      - description: Название региона
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: path
        name: region
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Получить регион
      tags:
      - Регионы
  /region/add:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Создаёт новый регион с праметрами, описанными в json'е
      parameters:
      - description: Данные нового регионы
=======
      description: Создаёт новый регион с параметрами, описанными в json
      parameters:
      - description: Характеристики нового региона
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/ds.Region'
      produces:
      - application/json
      responses:
        "201":
<<<<<<< HEAD
          description: Регион был успешно создан
          schema:
            type: string
      summary: Добавить регион в БД
=======
          description: Регион успешно добавлен
          schema:
            type: string
      summary: Добавляет новый регион в БД
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      tags:
      - Регионы
  /region/delete/{region_name}:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Находит регион по имени и меняет его статус на "Недоступен"
=======
      description: Находит регион по его названию и меняет его статус на "Недоступен"
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      parameters:
      - description: Название региона
        in: path
        name: region_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Удалить регион
      tags:
      - Регионы
  /region/delete_restore/{region_name}:
    get:
<<<<<<< HEAD
      description: Меняет статус региона с "Действует" на "Недоступен" и наобороь
      parameters:
      - description: Имя региона
=======
      description: Меняет статус региона с "Действует" на "Недоступен" и обратно
      parameters:
      - description: Название региона
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: path
        name: region_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
<<<<<<< HEAD
      summary: Удаляет или восстанавливает регион
=======
      summary: Удалить или восстановить регион
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      tags:
      - Регионы
  /region/edit:
    put:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Находит регион по имени и обновляет его поля
      parameters:
      - description: Новые данные изменяемого региона (должно быть имя региона или
=======
      description: Находит регион по имени и обновляет перечисленные поля
      parameters:
      - description: Данные редактируемого региона (должны содержать имя региона или
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
          его id)
        in: body
        name: region
        required: true
        schema:
          $ref: '#/definitions/ds.Region'
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
<<<<<<< HEAD
      summary: Отредактировать регион
=======
      summary: Редактировать регион
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
      tags:
      - Регионы
  /regions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Паттерн имени региона
        in: query
        name: name_pattern
        type: string
      - description: Округ
        in: query
        name: district
        type: string
      - description: Статус региона (Действует/Недействителен)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: Получить все регионы
      tags:
      - Регионы
  /register:
    post:
      consumes:
      - application/json
<<<<<<< HEAD
      description: Добавляет нового пользователя в БД
      parameters:
      - description: Тело запроса
=======
      description: Добавляет в БД нового пользователя
      parameters:
      - description: Данные для регистрации
>>>>>>> 3f1bd6bc496c9f3e19435f91d4cdba1db30eee2c
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.registerResp'
      summary: Зарегистрировать нового пользователя
      tags:
      - Аутентификация
schemes:
- http
swagger: "2.0"
