{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "UAV route control applications",
        "title": "drones",
        "contact": {},
        "version": "0.0-0"
    },
    "host": "127.0.0.1:8000",
    "basePath": "/",
    "paths": {
        "/book": {
            "put": {
                "description": "Creates a new flight and adds current region in it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Book region",
                "parameters": [
                    {
                        "description": "Booking request parameters",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.BookRegionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flight": {
            "get": {
                "description": "Returns flight with given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get flight",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flights status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flight/delete/{flight_id}": {
            "put": {
                "description": "Changes flight status to \"Удалён\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Deletes flight",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Flight id",
                        "name": "flight_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flight/edit": {
            "put": {
                "description": "Finds flight and updates it fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Edits flight",
                "parameters": [
                    {
                        "description": "Flight",
                        "name": "flight",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ds.Flight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flight/status_change": {
            "put": {
                "description": "Получает id заявки и новый статус и производит необходимые обновления",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Edit flight status",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.ChangeFlightStatusRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flight_to_region/delete": {
            "put": {
                "description": "Deletes region from flight",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Deletes flight_to_region connection",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.DeleteFlightToRegionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flights": {
            "get": {
                "description": "Returns list of all available flights",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "flights"
                ],
                "summary": "Get flights",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flights status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Returns your token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login into system",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.loginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.loginResp"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ping/{name}": {
            "get": {
                "description": "very very friendly response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tests"
                ],
                "summary": "Show hello text",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.pingResp"
                        }
                    }
                }
            }
        },
        "/region/add": {
            "put": {
                "description": "Creates a new reigon with parameters, specified in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Adds region to database",
                "parameters": [
                    {
                        "description": "New region's details",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.Region"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Region created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/region/delete/{region_name}": {
            "put": {
                "description": "Finds region by name and changes its status to \"Недоступен\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Deletes region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regions name",
                        "name": "region_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/region/delete_restore/{region_name}": {
            "get": {
                "description": "Switches region status from \"Действует\" to \"Недоступен\" and back",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Deletes or restores region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regions name",
                        "name": "region_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/region/edit": {
            "put": {
                "description": "Finds region by name and updates its fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Edits region",
                "parameters": [
                    {
                        "description": "Edited regioons data (must contain regions name or id)",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.Region"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/region/{region}": {
            "get": {
                "description": "Returns region with given name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Get region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regions name",
                        "name": "region",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "description": "Returns all existing regions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "regions"
                ],
                "summary": "Get all existing regions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Regions name pattern",
                        "name": "name_pattern",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Regions district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Regions status (Действует/Недействителен)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "adds a new user to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register a new user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.registerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.registerResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.loginReq": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "app.loginResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "app.pingResp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "app.registerReq": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "лучше назвать то же самое что login",
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                }
            }
        },
        "app.registerResp": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "ds.BookRegionRequestBody": {
            "type": "object",
            "properties": {
                "arrivalDate": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "takeoffDate": {
                    "type": "string"
                }
            }
        },
        "ds.ChangeFlightStatusRequestBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ds.DeleteFlightToRegionRequestBody": {
            "type": "object",
            "properties": {
                "flightID": {
                    "type": "integer"
                },
                "regionID": {
                    "type": "integer"
                }
            }
        },
        "ds.Flight": {
            "type": "object"
        },
        "ds.Region": {
            "type": "object",
            "properties": {
                "areaKm": {
                    "type": "number"
                },
                "averageHeightM": {
                    "type": "number"
                },
                "details": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "headEmail": {
                    "type": "string"
                },
                "headName": {
                    "type": "string"
                },
                "headPhone": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "population": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}